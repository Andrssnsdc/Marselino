---
// CheckoutForm.astro
import { z } from 'zod';

// Definir el esquema de validación
const formSchema = z.object({
  nombre: z.string().min(2, "El nombre debe tener al menos 2 caracteres"),
  apellidos: z.string().min(2, "Los apellidos deben tener al menos 2 caracteres"),
  celular: z.string().regex(/^\d{10}$/, "El número de celular debe tener 10 dígitos"),
  correo: z.string().email("Correo electrónico inválido"),
  identificacion: z.string().min(5, "El número de identificación debe tener al menos 5 caracteres"),
  ciudad: z.string().min(2, "La ciudad debe tener al menos 2 caracteres"),
  direccion: z.string().min(5, "La dirección debe tener al menos 5 caracteres"),
  complemento: z.string().optional(),
});

// Manejar el envío del formulario
if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    const data = Object.fromEntries(formData);
    const validatedData = formSchema.parse(data);

    // Obtener los datos del carrito del sessionStorage
    const cartData = JSON.parse(sessionStorage.getItem('cart') || '[]');
    const cartTotal = sessionStorage.getItem('cartTotal') || '0';

    // Aquí puedes procesar los datos del formulario y del carrito
    // Por ejemplo, enviarlos a un servidor, guardarlos en una base de datos, etc.
    console.log('Datos del formulario:', validatedData);
    console.log('Datos del carrito:', cartData);
    console.log('Total del carrito:', cartTotal);

    // Redirigir a una página de confirmación
    return Astro.redirect('/confirmacion-pedido');
  } catch (error) {
    console.error('Error al procesar el formulario:', error);
    // Manejar errores de validación o procesamiento
  }
}
---

<div class="checkout-container">
    <form id="checkoutForm" method="POST" class="checkout-form">
      <div class="form-header">
        <h2>Finalizar Compra</h2>
        <div class="progress-bar">
          <div class="progress-step active">Carrito</div>
          <div class="progress-step active">Datos</div>
          <div class="progress-step">Pago</div>
        </div>
      </div>
      <div class="form-columns">
        <div class="form-column">
          <div class="form-group">
            <label for="nombre">Nombre:</label>
            <input type="text" id="nombre" name="nombre" required>
          </div>
          <div class="form-group">
            <label for="apellidos">Apellidos:</label>
            <input type="text" id="apellidos" name="apellidos" required>
          </div>
          <div class="form-group">
            <label for="celular">Celular:</label>
            <input type="tel" id="celular" name="celular" required>
          </div>
          <div class="form-group">
            <label for="correo">Correo electrónico:</label>
            <input type="email" id="correo" name="correo" required>
          </div>
        </div>
        <div class="form-column">
          <div class="form-group">
            <label for="identificacion">Número de identificación:</label>
            <input type="text" id="identificacion" name="identificacion" required>
          </div>
          <div class="form-group">
            <label for="ciudad">Ciudad:</label>
            <input type="text" id="ciudad" name="ciudad" required>
          </div>
          <div class="form-group">
            <label for="direccion">Dirección:</label>
            <input type="text" id="direccion" name="direccion" required>
          </div>
          <div class="form-group">
            <label for="complemento">Complemento dirección:</label>
            <input type="text" id="complemento" name="complemento">
          </div>
        </div>
      </div>
      <div id="cartSummary" class="cart-summary">
        <!-- Resumen del carrito se llenará con JavaScript -->
      </div>
      <button type="submit" class="submit-btn">Proceder al Pago</button>
    </form>
  </div>
  
  <style>
    .checkout-container {
      max-width: 1000px;
      margin: 2rem auto;
      padding: 2rem;
      background-color: var(--white-smoke);
      border-radius: 15px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    }
  
    .checkout-form {
      display: flex;
      flex-direction: column;
    }
  
    .form-header {
      text-align: center;
      margin-bottom: 2rem;
    }
  
    .form-header h2 {
      color: var(--deep-blue);
      font-size: 2rem;
      margin-bottom: 1rem;
    }
  
    .progress-bar {
      display: flex;
      justify-content: space-between;
      margin-bottom: 2rem;
    }
  
    .progress-step {
      flex: 1;
      text-align: center;
      padding: 0.5rem;
      background-color: var(--medium-blue);
      color: var(--white-smoke);
      position: relative;
    }
  
    .progress-step::after {
      content: '';
      position: absolute;
      right: -10px;
      top: 0;
      width: 0;
      height: 0;
      border-top: 15px solid transparent;
      border-bottom: 15px solid transparent;
      border-left: 10px solid var(--medium-blue);
    }
  
    .progress-step:last-child::after {
      display: none;
    }
  
    .progress-step.active {
      background-color: var(--lime-green);
    }
  
    .progress-step.active::after {
      border-left-color: var(--lime-green);
    }
  
    .form-columns {
      display: flex;
      gap: 2rem;
      margin-bottom: 2rem;
    }
  
    .form-column {
      flex: 1;
    }
  
    .form-group {
      margin-bottom: 1.5rem;
    }
  
    label {
      display: block;
      margin-bottom: 0.5rem;
      color: var(--deep-blue);
      font-weight: bold;
    }
  
    input {
      width: 100%;
      padding: 0.75rem;
      border: 2px solid var(--medium-blue);
      border-radius: 8px;
      font-size: 1rem;
      transition: border-color 0.3s ease;
    }
  
    input:focus {
      outline: none;
      border-color: var(--lime-green);
      box-shadow: 0 0 0 3px rgba(205, 220, 57, 0.3);
    }
  
    .cart-summary {
      background-color: var(--lilac);
      border-radius: 8px;
      padding: 1.5rem;
      margin-bottom: 2rem;
    }
  
    .cart-summary h3 {
      color: var(--deep-blue);
      margin-bottom: 1rem;
    }
  
    .cart-item {
      display: flex;
      justify-content: space-between;
      margin-bottom: 0.5rem;
      padding-bottom: 0.5rem;
      border-bottom: 1px solid var(--medium-blue);
    }
  
    .submit-btn {
      background-color: var(--lime-green);
      color: var(--dark-gray);
      border: none;
      padding: 1rem 2rem;
      border-radius: 8px;
      font-size: 1.2rem;
      font-weight: bold;
      cursor: pointer;
      transition: all 0.3s ease;
      align-self: center;
    }
  
    .submit-btn:hover {
      background-color: #b9c45f;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
  
    @media (max-width: 768px) {
      .form-columns {
        flex-direction: column;
      }
  
      .progress-bar {
        flex-direction: column;
      }
  
      .progress-step::after {
        display: none;
      }
    }
  </style>
  
  <script>
  function initializeCheckoutForm() {
  const cartSummary = document.getElementById('cartSummary');
  const cart = JSON.parse(sessionStorage.getItem('cart') || '[]');
  const cartTotal = sessionStorage.getItem('cartTotal') || '0';

  let summaryHTML = '<h3>Resumen del Carrito</h3>';
  cart.forEach((item, index) => {
    summaryHTML += `
      <div class="cart-item">
        <p>${item.title} (x${item.quantity})</p>
        <p>$${item.totalPrice.toLocaleString()}</p>
      </div>
    `;
  });
  summaryHTML += `<div class="cart-item"><strong>Total:</strong> <strong>$${parseInt(cartTotal).toLocaleString()}</strong></div>`;

  if (cartSummary) {
    cartSummary.innerHTML = summaryHTML;
  }

  // Validación del formulario en el lado del cliente
  const form = document.getElementById('checkoutForm');
  form.addEventListener('submit', (e) => {
    e.preventDefault();
    if (validateForm()) {
      // Si la validación pasa, redirige a la página de resumen de orden
      redirectToOrderSummary();
    }
  });
}

function validateForm() {
  // Implementa la validación del formulario aquí
  // Retorna true si el formulario es válido, false si no lo es
  return true; // Placeholder
}

function redirectToOrderSummary() {
  const form = document.getElementById('checkoutForm');
  const formData = new FormData(form);
  const cart = JSON.parse(sessionStorage.getItem('cart') || '[]');
  const cartTotal = sessionStorage.getItem('cartTotal') || '0';

  // Crear un objeto con todos los datos
  const data = {
    cartData: encodeURIComponent(JSON.stringify(cart)),
    subtotal: cartTotal,
    ...Object.fromEntries(formData)
  };

  // Convertir el objeto en una cadena de consulta URL
  const queryString = Object.keys(data)
    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(data[key])}`)
    .join('&');

  // Redirigir a la página de resumen de orden con los datos
  window.location.href = `/confirmationpage${queryString}`;
}

document.addEventListener('astro:page-load', initializeCheckoutForm);
</script>