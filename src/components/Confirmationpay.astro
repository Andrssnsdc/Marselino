---
// confirmationpage.astro
import Layout from '../layouts/Layout.astro';

// Recuperar los datos del formulario y del carrito
const formData = Astro.cookies.get('checkoutFormData')?.json() || {};
const cartData = Astro.cookies.get('cartData')?.json() || [];
const cartTotal = parseFloat(Astro.cookies.get('cartTotal')?.value || '0');

const shippingCost = 10000; // Costo de envío fijo
const totalWithShipping = cartTotal + shippingCost;

// Función para formatear el precio
const formatPrice = (price) => new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP' }).format(price);
---


  <div class="confirmation-container">
    <h1>Confirmación de Pedido</h1>
    
    <section class="order-summary">
      <h2>Resumen de la Compra</h2>
      {cartData.map((item) => (
        <div class="order-item">
          <img src={item.imageUrl} alt={item.title} class="item-image" />
          <div class="item-details">
            <h3>{item.title}</h3>
            <p>Cantidad: {item.quantity}</p>
            <p>Talla: {item.size}</p>
            <p>Color: {item.color}</p>
            <p>Bordados: {item.embroideryCount}</p>
            <p>Posiciones: {item.selectedPositions.join(', ')}</p>
            <p class="item-price">{formatPrice(item.totalPrice)}</p>
          </div>
        </div>
      ))}
    </section>

    <section class="customer-info">
      <h2>Información de Envío</h2>
      <p><strong>Nombre:</strong> {formData.nombre} {formData.apellidos}</p>
      <p><strong>Celular:</strong> {formData.celular}</p>
      <p><strong>Correo:</strong> {formData.correo}</p>
      <p><strong>Identificación:</strong> {formData.identificacion}</p>
      <p><strong>Dirección:</strong> {formData.direccion}, {formData.complemento}, {formData.ciudad}</p>
    </section>

    <section class="total-summary">
      <div class="total-line">
        <span>Subtotal:</span>
        <span>{formatPrice(cartTotal)}</span>
      </div>
      <div class="total-line">
        <span>Costo de envío:</span>
        <span>{formatPrice(shippingCost)}</span>
      </div>
      <div class="total-line total">
        <span>Total:</span>
        <span>{formatPrice(totalWithShipping)}</span>
      </div>
    </section>

    <div class="actions">
      <a href="/" class="button">Volver a la Tienda</a>
      <button id="payButton" class="button primary">Proceder al Pago</button>
    </div>
  </div>
</Layout>

<style>
  .confirmation-container {
    max-width: 800px;
    margin: 2rem auto;
    padding: 2rem;
    background-color: var(--white-smoke);
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  }

  h1, h2 {
    color: var(--deep-blue);
    margin-bottom: 1rem;
  }

  .order-summary, .customer-info, .total-summary {
    margin-bottom: 2rem;
    padding: 1rem;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  }

  .order-item {
    display: flex;
    margin-bottom: 1rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--lilac);
  }

  .item-image {
    width: 100px;
    height: 100px;
    object-fit: cover;
    margin-right: 1rem;
    border-radius: 4px;
  }

  .item-details {
    flex-grow: 1;
  }

  .item-price {
    font-weight: bold;
    color: var(--rust-red);
  }

  .total-line {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.5rem;
  }

  .total {
    font-size: 1.2em;
    font-weight: bold;
    color: var(--deep-blue);
    border-top: 2px solid var(--lilac);
    padding-top: 0.5rem;
  }

  .actions {
    display: flex;
    justify-content: space-between;
    margin-top: 2rem;
  }

  .button {
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    text-decoration: none;
    font-weight: bold;
    transition: all 0.3s ease;
  }

  .button:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .button.primary {
    background-color: var(--lime-green);
    color: var(--dark-gray);
  }

  .button.primary:hover {
    background-color: #b9c45f;
  }

  @media (max-width: 600px) {
    .order-item {
      flex-direction: column;
    }

    .item-image {
      width: 100%;
      height: 200px;
      margin-right: 0;
      margin-bottom: 1rem;
    }
  }
</style>

<script>
  const payButton = document.getElementById('payButton');
  if (payButton) {
    payButton.addEventListener('click', () => {
      // Aquí puedes implementar la lógica para redirigir a la pasarela de pago
      alert('Redirigiendo a la pasarela de pago...');
    });
  }
</script>